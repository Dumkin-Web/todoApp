[{"/Users/nikitadumkin/Documents/Учеба/2 курс/КПО/todo/todo-app/src/index.js":"1","/Users/nikitadumkin/Documents/Учеба/2 курс/КПО/todo/todo-app/src/App.js":"2","/Users/nikitadumkin/Documents/Учеба/2 курс/КПО/todo/todo-app/src/components/TaskContainer.js":"3","/Users/nikitadumkin/Documents/Учеба/2 курс/КПО/todo/todo-app/src/components/Topbar.js":"4","/Users/nikitadumkin/Documents/Учеба/2 курс/КПО/todo/todo-app/src/components/TaskCreation.js":"5","/Users/nikitadumkin/Documents/Учеба/2 курс/КПО/todo/todo-app/src/components/Category.js":"6","/Users/nikitadumkin/Documents/Учеба/2 курс/КПО/todo/todo-app/src/components/CategoryCreation.js":"7","/Users/nikitadumkin/Documents/Учеба/2 курс/КПО/todo/todo-app/src/components/Task.js":"8","/Users/nikitadumkin/Documents/Учеба/2 курс/КПО/todo/todo-app/src/components/TaskEdit.js":"9","/Users/nikitadumkin/Desktop/temp/todoApp/todo-app/src/index.js":"10","/Users/nikitadumkin/Desktop/temp/todoApp/todo-app/src/App.js":"11","/Users/nikitadumkin/Desktop/temp/todoApp/todo-app/src/components/TaskContainer.js":"12","/Users/nikitadumkin/Desktop/temp/todoApp/todo-app/src/components/Topbar.js":"13","/Users/nikitadumkin/Desktop/temp/todoApp/todo-app/src/components/Category.js":"14","/Users/nikitadumkin/Desktop/temp/todoApp/todo-app/src/components/CategoryCreation.js":"15","/Users/nikitadumkin/Desktop/temp/todoApp/todo-app/src/components/TaskCreation.js":"16","/Users/nikitadumkin/Desktop/temp/todoApp/todo-app/src/components/Task.js":"17","/Users/nikitadumkin/Desktop/temp/todoApp/todo-app/src/components/TaskEdit.js":"18"},{"size":189,"mtime":1654546455518,"results":"19","hashOfConfig":"20"},{"size":520,"mtime":1654549054190,"results":"21","hashOfConfig":"20"},{"size":2508,"mtime":1654617589467,"results":"22","hashOfConfig":"20"},{"size":1143,"mtime":1654616812084,"results":"23","hashOfConfig":"20"},{"size":3061,"mtime":1654558621794,"results":"24","hashOfConfig":"20"},{"size":1861,"mtime":1654609747162,"results":"25","hashOfConfig":"20"},{"size":1918,"mtime":1654590479909,"results":"26","hashOfConfig":"20"},{"size":2027,"mtime":1654815952949,"results":"27","hashOfConfig":"20"},{"size":3190,"mtime":1654593693547,"results":"28","hashOfConfig":"20"},{"size":189,"mtime":1664583707135,"results":"29","hashOfConfig":"30"},{"size":520,"mtime":1664583707134,"results":"31","hashOfConfig":"30"},{"size":2457,"mtime":1664584146673,"results":"32","hashOfConfig":"30"},{"size":1091,"mtime":1664584169521,"results":"33","hashOfConfig":"30"},{"size":1861,"mtime":1664583707135,"results":"34","hashOfConfig":"30"},{"size":1918,"mtime":1664583707135,"results":"35","hashOfConfig":"30"},{"size":3007,"mtime":1664584126118,"results":"36","hashOfConfig":"30"},{"size":1964,"mtime":1664584260207,"results":"37","hashOfConfig":"30"},{"size":3136,"mtime":1664584121177,"results":"38","hashOfConfig":"30"},{"filePath":"39","messages":"40","suppressedMessages":"41","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1bkkuou",{"filePath":"42","messages":"43","suppressedMessages":"44","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"45","messages":"46","suppressedMessages":"47","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"48","messages":"49","suppressedMessages":"50","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"51","messages":"52","suppressedMessages":"53","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"54","messages":"55","suppressedMessages":"56","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"57","messages":"58","suppressedMessages":"59","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"60","messages":"61","suppressedMessages":"62","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"63","messages":"64","suppressedMessages":"65","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"66","messages":"67","suppressedMessages":"68","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"6ye94r",{"filePath":"69","messages":"70","suppressedMessages":"71","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"72"},{"filePath":"73","messages":"74","suppressedMessages":"75","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"76","messages":"77","suppressedMessages":"78","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"79","messages":"80","suppressedMessages":"81","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"82"},{"filePath":"83","messages":"84","suppressedMessages":"85","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"86","messages":"87","suppressedMessages":"88","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"89","usedDeprecatedRules":"90"},{"filePath":"91","messages":"92","suppressedMessages":"93","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"94"},{"filePath":"95","messages":"96","suppressedMessages":"97","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"98","usedDeprecatedRules":"90"},"/Users/nikitadumkin/Documents/Учеба/2 курс/КПО/todo/todo-app/src/index.js",[],[],"/Users/nikitadumkin/Documents/Учеба/2 курс/КПО/todo/todo-app/src/App.js",["99"],[],"/Users/nikitadumkin/Documents/Учеба/2 курс/КПО/todo/todo-app/src/components/TaskContainer.js",[],[],"/Users/nikitadumkin/Documents/Учеба/2 курс/КПО/todo/todo-app/src/components/Topbar.js",["100"],[],"/Users/nikitadumkin/Documents/Учеба/2 курс/КПО/todo/todo-app/src/components/TaskCreation.js",["101"],[],"/Users/nikitadumkin/Documents/Учеба/2 курс/КПО/todo/todo-app/src/components/Category.js",["102"],[],"/Users/nikitadumkin/Documents/Учеба/2 курс/КПО/todo/todo-app/src/components/CategoryCreation.js",[],[],"/Users/nikitadumkin/Documents/Учеба/2 курс/КПО/todo/todo-app/src/components/Task.js",["103","104","105","106"],[],"/Users/nikitadumkin/Documents/Учеба/2 курс/КПО/todo/todo-app/src/components/TaskEdit.js",["107"],[],"/Users/nikitadumkin/Desktop/temp/todoApp/todo-app/src/index.js",[],[],"/Users/nikitadumkin/Desktop/temp/todoApp/todo-app/src/App.js",["108"],[],"import React, { useEffect } from 'react';\nimport {Button} from 'react-bootstrap'\nimport TaskContainer from './components/TaskContainer';\nimport Topbar from './components/Topbar';\n\nconst App = () => {\n  useEffect(()=>{\n    if(localStorage.getItem('id') == null){\n      fetch('http://localhost:3006/reg')\n      .then(res=>res.json())\n      .then(res=>{\n        localStorage.setItem('id', res.data)\n      })\n    }\n  },[])\n  return (\n    <div>\n      <Topbar />\n      <TaskContainer />\n    </div>\n  );\n}\n\nexport default App;\n","/Users/nikitadumkin/Desktop/temp/todoApp/todo-app/src/components/TaskContainer.js",[],[],"/Users/nikitadumkin/Desktop/temp/todoApp/todo-app/src/components/Topbar.js",[],[],"/Users/nikitadumkin/Desktop/temp/todoApp/todo-app/src/components/Category.js",["109"],[],"import React, { useEffect, useState } from \"react\";\nimport { Accordion, Spinner } from \"react-bootstrap\";\nimport Task from \"./Task\";\n\nconst Category = (props) =>{\n    const [active, setActive] = useState([])\n    const [loading, setLoading] = useState(true);\n    const [data, setData] = useState([])\n\n    useEffect(()=>{\n        delete props.data['allTasks'];\n        let tempData = [];\n        let i = 0;\n        let tempArr = []\n        Object.keys(props.data).forEach((el =>{\n            if(Object.keys(props.data[el]).length !==0){\n                tempData.push(el)\n                tempArr.push(i.toString());\n                i++\n            }\n        }))\n        setData(tempData)\n        setActive(tempArr)\n        setLoading(false)\n    }, [])\n    \n    if(loading){\n        return <div className=\"d-flex justify-content-center w-100\" style={{marginTop: window.innerHeight/3}}><Spinner animation=\"grow\" style={{width: \"10rem\", height: \"10rem\"}} /></div>\n    }\n    console.log(data)\n    return(\n        <Accordion defaultActiveKey={active} className=\"w-100\" alwaysOpen flush>\n            {(data).map((category, index, arr)=>{\n                console.log(category)\n                return <Accordion.Item key={index} eventKey={index.toString()} className=\"w-100\">\n                            <Accordion.Header>{ category === \"any\" ? \"Задачи без категории\" : category}</Accordion.Header>\n                            <Accordion.Body>\n                            {Object.keys(props.data[category]).map((task, index) => {\n                                    return <Task key={index} task={task} category={category} done={props.data[category][task]} />\n                                })}\n                            </Accordion.Body>\n                        </Accordion.Item>\n            })}\n        </Accordion>\n    )\n}\n\nexport default Category;","/Users/nikitadumkin/Desktop/temp/todoApp/todo-app/src/components/CategoryCreation.js",[],[],"/Users/nikitadumkin/Desktop/temp/todoApp/todo-app/src/components/TaskCreation.js",["110"],[],"import React, { useEffect, useState } from \"react\";\nimport { Button, Modal, Form, Spinner } from \"react-bootstrap\";\n\nconst TaskCreation = (props)=>{\n    const [cats, setCats] = useState(false)\n    const [loading, setLoading] = useState(true);\n    let name = \"\", cat = 0;\n\n    useEffect(()=>{\n        if(cats === false){\n            fetch(\"http://localhost:3006/category?id=\"+localStorage.getItem('id'))\n            .then(res=>res.json())\n            .then(res=>{\n                delete res.data[1]\n                setCats(res.data)\n                setLoading(false)\n            })\n        }\n    }, [])\n\n    function createTask(){\n        if(name !== \"\"){\n            console.log(cats[cat])\n            fetch(\"http://localhost:3006/tasks/add?id=\"+localStorage.getItem('id') + \"&task=\" + name+ \"&cat=\" + cats[cat])\n            .finally(()=>window.location.reload())\n        }\n    }\n\n    if(loading){\n        return <div className=\"d-flex justify-content-center w-100\" style={{marginTop: window.innerHeight/3}}><Spinner animation=\"grow\" style={{width: \"10rem\", height: \"10rem\"}} /></div>\n    }\n\n    return(\n        <Modal show={true} onHide={() => props.handleClose(false)}>\n            <Modal.Header closeButton>\n            <Modal.Title>Новая категория</Modal.Title>\n            </Modal.Header>\n            <Modal.Body>\n                <Form onSubmit={()=>createTask()}>\n                    <Form.Group className=\"mb-3\" controlId=\"exampleForm.ControlInput1\">\n                    <Form.Label>Название категории</Form.Label>\n                    <Form.Select aria-label=\"Default select example\" className=\"mb-3\" onChange={(e) =>{\n                        cat = e.target.value}}>\n                        {cats.map((value, index)=>{\n                            return <option key={index} value={index}>{value}</option>\n                        })}\n                    </Form.Select>\n                    <Form.Label>Что нужно сделать?</Form.Label>\n                    <Form.Control onChange={(e) =>{\n                        name = e.target.value;\n                        if(name === \"\"){\n                            e.target.classList.add('border-danger')\n                        }\n                        else{\n                            e.target.classList.remove('border-danger')\n                        }\n                    }}\n                        type=\"text\"\n                        placeholder=\"Очень важное дело\"\n                        autoFocus\n                    />\n                    </Form.Group>\n                </Form>\n            </Modal.Body>\n            <Modal.Footer>\n            <Button variant=\"secondary\" onClick={() => props.handleClose(false)}>\n                Закрыть\n            </Button>\n            <Button variant=\"primary\"  \n            onClick={() => createTask()}\n            >\n                Создать\n            </Button>\n            </Modal.Footer>\n      </Modal>\n    )\n}\n\nexport default TaskCreation;",[],"/Users/nikitadumkin/Desktop/temp/todoApp/todo-app/src/components/Task.js",["111"],[],"import React, { useEffect, useState } from \"react\";\nimport { Button, Form } from \"react-bootstrap\";\nimport TaskEdit from \"./TaskEdit\";\n\n\nconst Task= (props)=>{\n    const [checked, setChecked] =useState(false)\n    //const [redact, setRedact] = useState(false)\n\n    const [show, setShow] = useState(false);\n    const handleClose = () => setShow(false);\n    const handleShow = () => setShow(true);\n    \n    useEffect(()=>{\n        setChecked(props.done)\n    }, [])\n\n    return(\n        <div>\n            {show ? <TaskEdit handleClose={handleClose} task={props.task} cat={props.category}/> : <div></div>}\n            <div className=\"d-flex justify-content-between align-items-center mb-3 p-2 border\">\n                <Form className=\"me-3\">\n                    <Form.Check checked={checked} onChange={(e)=>{\n                        fetch(\"http://localhost:3006/tasks/change?id=\"+localStorage.getItem('id') + \"&cat=\" + props.category+\"&task=\"+props.task)\n                        .then(\n                            setChecked(!checked)\n                        )\n                        \n                        \n                    }}/>\n                </Form>\n                {checked ? <div style={{textDecoration: \"line-through\", fontSize:20}}>{props.task}</div>: <div style={{fontSize:24}}>{props.task}</div>}\n                <div className=\"d-flex\">\n                { !checked ? <Button className=\"me-2\" onClick={handleShow}>Редактировать</Button>: <Button className=\"me-2\" onClick={handleShow} disabled>Редактировать</Button> }\n                <Button variant=\"danger\" style={{width: 44, fontSize: 20}} onClick={(e)=>{\n                    fetch(\"http://localhost:3006/tasks/delete?id=\"+localStorage.getItem('id') + \"&cat=\" + props.category+\"&task=\"+props.task)\n                    .finally(() => window.location.reload())\n                }}>x</Button>\n                </div>\n            </div>\n        </div>\n    )\n}\n\nexport default Task;","/Users/nikitadumkin/Desktop/temp/todoApp/todo-app/src/components/TaskEdit.js",["112"],[],"import React, { useEffect, useState } from \"react\";\nimport { Button, Modal, Form, Spinner } from \"react-bootstrap\";\n\nconst TaskEdit = (props)=>{\n    const [cats, setCats] = useState([])\n    const [loading, setLoading] = useState(true);\n    let name = props.task, cat = cats.indexOf(props.cat);\n\n    useEffect(()=>{\n        if(cats.length === 0){\n            fetch(\"http://localhost:3006/category?id=\"+localStorage.getItem('id'))\n            .then(res=>res.json())\n            .then(res=>{\n                delete res.data[1]\n                setCats(res.data)\n                setLoading(false)\n            })\n        }\n    }, [])\n\n    function editTask(){\n        if(name !== \"\"){\n            console.log(cats[cat])\n            fetch(\"http://localhost:3006/tasks/edit?id=\"+localStorage.getItem('id') + \"&task=\" + props.task+ \"&cat=\" + props.cat+\"&newCat=\"+cats[cat]+\"&newTask=\"+name)\n            .finally(()=>window.location.reload())\n        }\n    }\n\n    if(loading){\n        return <div className=\"d-flex justify-content-center w-100\" style={{marginTop: window.innerHeight/3}}><Spinner animation=\"grow\" style={{width: \"10rem\", height: \"10rem\"}} /></div>\n    }\n\n    return(\n        <Modal show={true} onHide={() => props.handleClose(false)}>\n            <Modal.Header closeButton>\n            <Modal.Title>Новая категория</Modal.Title>\n            </Modal.Header>\n            <Modal.Body>\n                <Form onSubmit={()=>editTask()}>\n                    <Form.Group className=\"mb-3\" controlId=\"exampleForm.ControlInput1\">\n                    <Form.Label>Название категории</Form.Label>\n                    <Form.Select aria-label=\"Default select example\" className=\"mb-3\" defaultValue={cats.indexOf(props.cat)} onChange={(e) =>{\n                        cat = e.target.value}}>\n                        {cats.map((value, index)=>{\n                            return <option key={index} value={index}>{value}</option>\n                        })}\n                    </Form.Select>\n                    <Form.Label>Как назвать ваше дело?</Form.Label>\n                    <Form.Control defaultValue={name} onChange={(e) =>{\n                        name = e.target.value;\n                        if(name === \"\"){\n                            e.target.classList.add('border-danger')\n                        }\n                        else{\n                            e.target.classList.remove('border-danger')\n                        }\n                    }}\n                        type=\"text\"\n                        placeholder=\"Очень важное дело\"\n                        autoFocus\n                    />\n                    </Form.Group>\n                </Form>\n            </Modal.Body>\n            <Modal.Footer>\n            <Button variant=\"secondary\" onClick={() => props.handleClose(false)}>\n                Закрыть\n            </Button>\n            <Button variant=\"primary\"  \n            onClick={() => editTask()}\n            >\n                Изменить\n            </Button>\n            </Modal.Footer>\n      </Modal>\n    )\n}\n\nexport default TaskEdit;",{"ruleId":"113","severity":1,"message":"114","line":2,"column":9,"nodeType":"115","messageId":"116","endLine":2,"endColumn":15},{"ruleId":"113","severity":1,"message":"117","line":10,"column":11,"nodeType":"115","messageId":"116","endLine":10,"endColumn":21},{"ruleId":"118","severity":1,"message":"119","line":20,"column":8,"nodeType":"120","endLine":20,"endColumn":10,"suggestions":"121"},{"ruleId":"118","severity":1,"message":"122","line":25,"column":8,"nodeType":"120","endLine":25,"endColumn":10,"suggestions":"123"},{"ruleId":"113","severity":1,"message":"124","line":3,"column":10,"nodeType":"115","messageId":"116","endLine":3,"endColumn":19},{"ruleId":"113","severity":1,"message":"125","line":9,"column":12,"nodeType":"115","messageId":"116","endLine":9,"endColumn":18},{"ruleId":"113","severity":1,"message":"126","line":9,"column":20,"nodeType":"115","messageId":"116","endLine":9,"endColumn":29},{"ruleId":"118","severity":1,"message":"127","line":17,"column":8,"nodeType":"120","endLine":17,"endColumn":10,"suggestions":"128"},{"ruleId":"118","severity":1,"message":"129","line":20,"column":8,"nodeType":"120","endLine":20,"endColumn":10,"suggestions":"130"},{"ruleId":"113","severity":1,"message":"114","line":2,"column":9,"nodeType":"115","messageId":"116","endLine":2,"endColumn":15},{"ruleId":"118","severity":1,"message":"122","line":25,"column":8,"nodeType":"120","endLine":25,"endColumn":10,"suggestions":"131"},{"ruleId":"118","severity":1,"message":"119","line":19,"column":8,"nodeType":"120","endLine":19,"endColumn":10,"suggestions":"132"},{"ruleId":"118","severity":1,"message":"127","line":16,"column":8,"nodeType":"120","endLine":16,"endColumn":10,"suggestions":"133"},{"ruleId":"118","severity":1,"message":"129","line":19,"column":8,"nodeType":"120","endLine":19,"endColumn":10,"suggestions":"134"},"no-unused-vars","'Button' is defined but never used.","Identifier","unusedVar","'handleShow' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'cats'. Either include it or remove the dependency array.","ArrayExpression",["135"],"React Hook useEffect has a missing dependency: 'props.data'. Either include it or remove the dependency array.",["136"],"'Accordion' is defined but never used.","'redact' is assigned a value but never used.","'setRedact' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'props.done'. Either include it or remove the dependency array. If 'setChecked' needs the current value of 'props.done', you can also switch to useReducer instead of useState and read 'props.done' in the reducer.",["137"],"React Hook useEffect has a missing dependency: 'cats.length'. Either include it or remove the dependency array.",["138"],["139"],["140"],["141"],["142"],{"desc":"143","fix":"144"},{"desc":"145","fix":"146"},{"desc":"147","fix":"148"},{"desc":"149","fix":"150"},{"desc":"145","fix":"151"},{"desc":"143","fix":"152"},{"desc":"147","fix":"153"},{"desc":"149","fix":"154"},"Update the dependencies array to be: [cats]",{"range":"155","text":"156"},"Update the dependencies array to be: [props.data]",{"range":"157","text":"158"},"Update the dependencies array to be: [props.done]",{"range":"159","text":"160"},"Update the dependencies array to be: [cats.length]",{"range":"161","text":"162"},{"range":"163","text":"158"},{"range":"164","text":"156"},{"range":"165","text":"160"},{"range":"166","text":"162"},[651,653],"[cats]",[745,747],"[props.data]",[520,522],"[props.done]",[677,679],"[cats.length]",[745,747],[598,600],[458,460],[624,626]]